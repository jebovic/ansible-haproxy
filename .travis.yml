env:
  - distro: debianjessie
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml
  - distro: ubuntutrusty
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml
  - distro: ubuntuxenial
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml

services:
  - docker

before_install:
  - docker pull jebovic/${distro}-ansible:latest

script:
  # run container
  - container_id=$(mktemp)
  - docker run --detach --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro -p 80:80 --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} jebovic/${distro}-ansible:latest "${init}" > "${container_id}"
  # syntax checking
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --syntax-check
  # test role
  - docker exec "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook}
  # test role idempotence
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # test role tasks
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm service haproxy status
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm service haproxy stop
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm service haproxy start

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    secure: ZJLSZN2pWCK78tlkUwR5tDuqmbWLgISsMA1gTTT46Zvz7x/winIM5muYVLKB6E3TJqbvlJRAytKnEaJa4iZmFrH5hie2heJtvRXtXHB9ZqguzF3/fD5Uk5qemeZwJ1hvlhsWHD2wQ9ABBD7ndtVtAZy05OuXVAmVAx3LPC00YGqnW8opwtvRHOPT8lSwpkCv4U5JoHqlWJuGFq7LJVMiXqNyrK6VHusn7JXLBorNnAhP5ISmC3SIn/7C91Xj43CUwpklfD7Gn82JUAZBxHgzHMBIw3mAaxS07rkUjH3NFu5Ly+n6JarzsKfgTB9iPNLKwyt5oLGqfVsPpo2+rSyx2TSpESMZVGDFR3w/BM7+piEv0mzCpZFrlss0I7ZUx2yGChU+91yDh4m+5mT3SayNLzLzPO5lS3ctztuPFCmSbKmPZzkXwdgmW/VhKwBIqv9i1KHDwSsFW/+08eIqt80lWOe96pZSb0aeXGMSdnh+rCw3RokRdw4b5B2UeJpSSUwqxrz9+00yKtSnSwC1jVDGsy3lEI+mLV/RM8HZco3+foJSYvop8OiY4+ii3pPalYmSy9kDDtbIcYxIw3GRS7g5duP0cxJR4EgLlAArYteKuT5r/WSgYSaQlmj7gj6LxXlnzjRITxbTazMF1t+rkP6W/eWnl7kCFu0mq5DzehP+f4w=
